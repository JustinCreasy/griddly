
@{
    ViewBag.Title = "TestGrid";
}

@Html.Griddly(new GriddlySettings<TestGridItem>()
    {
        PageSize = 5,
        RowClickUrl = x => "http://microsoft.com",
        Buttons = new List<GriddlyButton>()
        {
            new GriddlyButton() { Text = "Dropdown Test" }
                .Add(new GriddlyButton() { Text = "UrlHelper Test", Argument = Url.Action("About") })
        }
    }
    .Column("test", template: @<a href="http://google.com">google</a>, summaryValue: "Total")
    .Column(x => x.Test, "Sum", format: "c", summaryFunction: SummaryAggregateFunction.Sum)
        .Column(x => x.Test, "Min", format: "c", summaryFunction: SummaryAggregateFunction.Min)
        .Column(x => x.Test, "Max", format: "c", summaryFunction: SummaryAggregateFunction.Max)
        .Column(x => x.Test, "Avg", format: "c", summaryFunction: SummaryAggregateFunction.Average)
    .Column(x => x.FirstName, "First Name")
    .Column(x => x.LastName, "Last Name", defaultSort: SortDirection.Ascending, filter: x => x.FilterBox(FilterDataType.String))
    .Column(x => x.Company, "Company", filter: x => x.FilterBox(FilterDataType.Decimal))
    .Column(x => x.Address, "Address", filter: x => x.FilterBox(FilterDataType.Currency))
    .Column(x => x.City, "City", filter: x => x.FilterBox(FilterDataType.Date))
    .Column(x => x.PostalCode, "Zip", filter: x => x.FilterBox(FilterDataType.Integer))
)